{"version":3,"sources":["perlin.js","utils.js","wave.js","wind.js","rain.js","index.js"],"names":["global","module","noise","Grad","x","y","z","prototype","dot2","dot3","grad3","p","perm","Array","gradP","seed","Math","floor","i","v","F2","sqrt","G2","G3","fade","t","lerp","a","b","simplex2","xin","yin","n0","i1","j1","s","j","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","simplex3","zin","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","gi3","t3","perlin2","X","Y","n00","n01","n10","n11","u","perlin3","Z","n000","n001","n010","n011","n100","n101","n110","n111","w","copy","target","re","isChangeing","move","origin","duration","st","from","performance","now","d","frame","dt","per","pro","requestAnimationFrame","wave","dom","span","scale","speed","zIndex","colors","r","g","style","position","overflow","canvas","document","createElement","context","getContext","top","parseInt","getComputedStyle","left","height","width","appendChild","ci","color","Point","cx","cy","init","beginPath","sa","abs","strokeStyle","lineWidth","PI","ap","moveTo","cos","lineTo","sin","stroke","points","initPoints","push","id","moveE","e","movementX","movementY","leaveE","resizeE","clickE","length","animate","draw","clearRect","translate","addEventListener","window","stop","cancelAnimationFrame","removeEventListener","wind","line","rain"],"mappings":"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","file":"index.map","sourceRoot":"..","sourcesContent":["/*\r\n * A speed-improved perlin and simplex noise algorithms for 2D.\r\n *\r\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\r\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\r\n * Better rank ordering method by Stefan Gustavson in 2012.\r\n * Converted to Javascript by Joseph Gentle.\r\n *\r\n * Version 2012-03-09\r\n *\r\n * This code was placed in the public domain by its original author,\r\n * Stefan Gustavson. You may use it as you see fit, but\r\n * attribution is appreciated.\r\n *\r\n */\r\n\r\n(function(global){\r\n    var module = global.noise = {};\r\n  \r\n    function Grad(x, y, z) {\r\n      this.x = x; this.y = y; this.z = z;\r\n    }\r\n    \r\n    Grad.prototype.dot2 = function(x, y) {\r\n      return this.x*x + this.y*y;\r\n    };\r\n  \r\n    Grad.prototype.dot3 = function(x, y, z) {\r\n      return this.x*x + this.y*y + this.z*z;\r\n    };\r\n  \r\n    var grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\r\n                 new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\r\n                 new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\r\n  \r\n    var p = [151,160,137,91,90,15,\r\n    131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\r\n    190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\r\n    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\r\n    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\r\n    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\r\n    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\r\n    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\r\n    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\r\n    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\r\n    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\r\n    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\r\n    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\r\n    // To remove the need for index wrapping, double the permutation table length\r\n    var perm = new Array(512);\r\n    var gradP = new Array(512);\r\n  \r\n    // This isn't a very good seeding function, but it works ok. It supports 2^16\r\n    // different seed values. Write something better if you need more seeds.\r\n    module.seed = function(seed) {\r\n      if(seed > 0 && seed < 1) {\r\n        // Scale the seed out\r\n        seed *= 65536;\r\n      }\r\n  \r\n      seed = Math.floor(seed);\r\n      if(seed < 256) {\r\n        seed |= seed << 8;\r\n      }\r\n  \r\n      for(var i = 0; i < 256; i++) {\r\n        var v;\r\n        if (i & 1) {\r\n          v = p[i] ^ (seed & 255);\r\n        } else {\r\n          v = p[i] ^ ((seed>>8) & 255);\r\n        }\r\n  \r\n        perm[i] = perm[i + 256] = v;\r\n        gradP[i] = gradP[i + 256] = grad3[v % 12];\r\n      }\r\n    };\r\n  \r\n    module.seed(0);\r\n  \r\n    /*\r\n    for(var i=0; i<256; i++) {\r\n      perm[i] = perm[i + 256] = p[i];\r\n      gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\r\n    }*/\r\n  \r\n    // Skewing and unskewing factors for 2, 3, and 4 dimensions\r\n    var F2 = 0.5*(Math.sqrt(3)-1);\r\n    var G2 = (3-Math.sqrt(3))/6;\r\n  \r\n    var F3 = 1/3;\r\n    var G3 = 1/6;\r\n  \r\n    // 2D simplex noise\r\n    module.simplex2 = function(xin, yin) {\r\n      var n0, n1, n2; // Noise contributions from the three corners\r\n      // Skew the input space to determine which simplex cell we're in\r\n      var s = (xin+yin)*F2; // Hairy factor for 2D\r\n      var i = Math.floor(xin+s);\r\n      var j = Math.floor(yin+s);\r\n      var t = (i+j)*G2;\r\n      var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\r\n      var y0 = yin-j+t;\r\n      // For the 2D case, the simplex shape is an equilateral triangle.\r\n      // Determine which simplex we are in.\r\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n      if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n        i1=1; j1=0;\r\n      } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n        i1=0; j1=1;\r\n      }\r\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n      // c = (3-sqrt(3))/6\r\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n      var y1 = y0 - j1 + G2;\r\n      var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\r\n      var y2 = y0 - 1 + 2 * G2;\r\n      // Work out the hashed gradient indices of the three simplex corners\r\n      i &= 255;\r\n      j &= 255;\r\n      var gi0 = gradP[i+perm[j]];\r\n      var gi1 = gradP[i+i1+perm[j+j1]];\r\n      var gi2 = gradP[i+1+perm[j+1]];\r\n      // Calculate the contribution from the three corners\r\n      var t0 = 0.5 - x0*x0-y0*y0;\r\n      if(t0<0) {\r\n        n0 = 0;\r\n      } else {\r\n        t0 *= t0;\r\n        n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\r\n      }\r\n      var t1 = 0.5 - x1*x1-y1*y1;\r\n      if(t1<0) {\r\n        n1 = 0;\r\n      } else {\r\n        t1 *= t1;\r\n        n1 = t1 * t1 * gi1.dot2(x1, y1);\r\n      }\r\n      var t2 = 0.5 - x2*x2-y2*y2;\r\n      if(t2<0) {\r\n        n2 = 0;\r\n      } else {\r\n        t2 *= t2;\r\n        n2 = t2 * t2 * gi2.dot2(x2, y2);\r\n      }\r\n      // Add contributions from each corner to get the final noise value.\r\n      // The result is scaled to return values in the interval [-1,1].\r\n      return 70 * (n0 + n1 + n2);\r\n    };\r\n  \r\n    // 3D simplex noise\r\n    module.simplex3 = function(xin, yin, zin) {\r\n      var n0, n1, n2, n3; // Noise contributions from the four corners\r\n  \r\n      // Skew the input space to determine which simplex cell we're in\r\n      var s = (xin+yin+zin)*F3; // Hairy factor for 2D\r\n      var i = Math.floor(xin+s);\r\n      var j = Math.floor(yin+s);\r\n      var k = Math.floor(zin+s);\r\n  \r\n      var t = (i+j+k)*G3;\r\n      var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\r\n      var y0 = yin-j+t;\r\n      var z0 = zin-k+t;\r\n  \r\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n      // Determine which simplex we are in.\r\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\r\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\r\n      if(x0 >= y0) {\r\n        if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }\r\n        else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }\r\n        else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }\r\n      } else {\r\n        if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }\r\n        else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }\r\n        else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }\r\n      }\r\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n      // c = 1/6.\r\n      var x1 = x0 - i1 + G3; // Offsets for second corner\r\n      var y1 = y0 - j1 + G3;\r\n      var z1 = z0 - k1 + G3;\r\n  \r\n      var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\r\n      var y2 = y0 - j2 + 2 * G3;\r\n      var z2 = z0 - k2 + 2 * G3;\r\n  \r\n      var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\r\n      var y3 = y0 - 1 + 3 * G3;\r\n      var z3 = z0 - 1 + 3 * G3;\r\n  \r\n      // Work out the hashed gradient indices of the four simplex corners\r\n      i &= 255;\r\n      j &= 255;\r\n      k &= 255;\r\n      var gi0 = gradP[i+   perm[j+   perm[k   ]]];\r\n      var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\r\n      var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\r\n      var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\r\n  \r\n      // Calculate the contribution from the four corners\r\n      var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;\r\n      if(t0<0) {\r\n        n0 = 0;\r\n      } else {\r\n        t0 *= t0;\r\n        n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\r\n      }\r\n      var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;\r\n      if(t1<0) {\r\n        n1 = 0;\r\n      } else {\r\n        t1 *= t1;\r\n        n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\r\n      }\r\n      var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;\r\n      if(t2<0) {\r\n        n2 = 0;\r\n      } else {\r\n        t2 *= t2;\r\n        n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\r\n      }\r\n      var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;\r\n      if(t3<0) {\r\n        n3 = 0;\r\n      } else {\r\n        t3 *= t3;\r\n        n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\r\n      }\r\n      // Add contributions from each corner to get the final noise value.\r\n      // The result is scaled to return values in the interval [-1,1].\r\n      return 32 * (n0 + n1 + n2 + n3);\r\n  \r\n    };\r\n  \r\n    // ##### Perlin noise stuff\r\n  \r\n    function fade(t) {\r\n      return t*t*t*(t*(t*6-15)+10);\r\n    }\r\n  \r\n    function lerp(a, b, t) {\r\n      return (1-t)*a + t*b;\r\n    }\r\n  \r\n    // 2D Perlin Noise\r\n    module.perlin2 = function(x, y) {\r\n      // Find unit grid cell containing point\r\n      var X = Math.floor(x), Y = Math.floor(y);\r\n      // Get relative xy coordinates of point within that cell\r\n      x = x - X; y = y - Y;\r\n      // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n      X = X & 255; Y = Y & 255;\r\n  \r\n      // Calculate noise contributions from each of the four corners\r\n      var n00 = gradP[X+perm[Y]].dot2(x, y);\r\n      var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\r\n      var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\r\n      var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\r\n  \r\n      // Compute the fade curve value for x\r\n      var u = fade(x);\r\n  \r\n      // Interpolate the four results\r\n      return lerp(\r\n          lerp(n00, n10, u),\r\n          lerp(n01, n11, u),\r\n         fade(y));\r\n    };\r\n  \r\n    // 3D Perlin Noise\r\n    module.perlin3 = function(x, y, z) {\r\n      // Find unit grid cell containing point\r\n      var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\r\n      // Get relative xyz coordinates of point within that cell\r\n      x = x - X; y = y - Y; z = z - Z;\r\n      // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n      X = X & 255; Y = Y & 255; Z = Z & 255;\r\n  \r\n      // Calculate noise contributions from each of the eight corners\r\n      var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\r\n      var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\r\n      var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\r\n      var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\r\n      var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\r\n      var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\r\n      var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\r\n      var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\r\n  \r\n      // Compute the fade curve value for x, y, z\r\n      var u = fade(x);\r\n      var v = fade(y);\r\n      var w = fade(z);\r\n  \r\n      // Interpolate\r\n      return lerp(\r\n          lerp(\r\n            lerp(n000, n100, u),\r\n            lerp(n001, n101, u), w),\r\n          lerp(\r\n            lerp(n010, n110, u),\r\n            lerp(n011, n111, u), w),\r\n         v);\r\n    };\r\n  \r\n  })(this);","const copy = target => {\r\n  let re = [];\r\n  for (let i in target) {\r\n    re[i] = target[i];\r\n  }\r\n\r\n  return re;\r\n};\r\n\r\nlet isChangeing = false;\r\nconst move = (origin, target, duration) => {\r\n  if (isChangeing) {\r\n    return;\r\n  }\r\n  isChangeing = true;\r\n  let st, from;\r\n  st = from = performance.now();\r\n  let d = {}; // 源与目标之间每一项的距离\r\n  for (let i in origin) {\r\n    d[i] = target[i] - origin[i];\r\n  }\r\n\r\n  let frame = t => {\r\n    let dt = t - st, // 这次与上次间隔\r\n      per = dt / duration, // 上一次到这一次的时间占总时间比\r\n      pro = (t - from) / duration; // 当前进程\r\n    if (pro >= 1) {\r\n      isChangeing = false;\r\n      return;\r\n    }\r\n    for (let i in origin) {\r\n      origin[i] += d[i] * per; // 每一项加上时间比(per)*总距离(d[i])\r\n    }\r\n    st = t; // 起始时间变为当前时间\r\n\r\n    requestAnimationFrame(frame);\r\n  };\r\n  frame(st);\r\n};\r\n\r\nexport { copy, move };\r\n","import { noise } from \"./perlin\";\r\nimport { move, copy } from \"./utils\";\r\n\r\nconst wave = function({\r\n  dom, // 挂载在哪个dom上\r\n  span = 50, // 单个元素的大小\r\n  scale = 1000, // 与噪声晶格的映射比，值越大动画越混沌无序\r\n  speed = 0.002, // 单个元素旋转速度\r\n  duration = 1000, // 颜色改变时间,\r\n  zIndex = -999,\r\n  colors = [\r\n    {\r\n      r: 212,\r\n      g: 192,\r\n      b: 255\r\n    },\r\n    {\r\n      r: 192,\r\n      g: 255,\r\n      b: 244\r\n    },\r\n    {\r\n      r: 255,\r\n      g: 192,\r\n      b: 203\r\n    }\r\n  ] // 颜色组，点击dom时颜色将在这个数组间切换\r\n}) {\r\n  dom.style.position = \"relative\";\r\n  dom.style.zIndex = 0;\r\n  dom.style.overflow = \"hidden\";\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  canvas.style.position = \"absolute\";\r\n  canvas.style.zIndex = zIndex;\r\n  canvas.style.top =\r\n    \"-\" + parseInt(getComputedStyle(dom)[\"height\"]) * 0.1 + \"px\";\r\n  canvas.style.left =\r\n    \"-\" + parseInt(getComputedStyle(dom)[\"width\"]) * 0.1 + \"px\";\r\n  canvas.height = parseInt(getComputedStyle(dom)[\"height\"]) * 1.2;\r\n  canvas.width = parseInt(getComputedStyle(dom)[\"width\"]) * 1.2;\r\n\r\n  dom.appendChild(canvas);\r\n\r\n  let r = span / 2;\r\n  let seed = 0;\r\n  let ci = 0;\r\n  const color = copy(colors[ci]);\r\n\r\n  function Point({ cx, cy }) {\r\n    this.cx = cx;\r\n    this.cy = cy;\r\n  }\r\n\r\n  Point.prototype.init = function() {\r\n    context.beginPath();\r\n    let s = noise.simplex3(this.cx / scale, this.cy / scale, seed);\r\n    let sa = Math.abs(s);\r\n    context.strokeStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${sa})`;\r\n    context.lineWidth = Math.abs(s) * 8;\r\n    let a = Math.PI * 2 * s;\r\n    let ap = Math.PI + a;\r\n\r\n    context.moveTo(this.cx + Math.cos(a) * r, this.cy);\r\n    context.lineTo(this.cx + Math.cos(ap) * r, this.cy + Math.sin(ap) * r);\r\n\r\n    context.stroke();\r\n  };\r\n\r\n  let points = [];\r\n  function initPoints() {\r\n    for (let y = 0; y < canvas.height; y += span) {\r\n      for (let x = 0; x < canvas.width; x += span) {\r\n        // 这里可能造成绘制的条形超过canvas边界，x < canvas.height即使在canvas的倒数第一行也成立，也会继续向下\r\n        points.push(\r\n          new Point({\r\n            cx: x + r,\r\n            cy: y + r\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const p = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  function draw() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.translate(p.x, p.y);\r\n    [p.x, p.y] = [0, 0];\r\n\r\n    for (let i of points) {\r\n      i.init();\r\n    }\r\n  }\r\n\r\n  let id;\r\n  function animate() {\r\n    draw();\r\n    seed += speed;\r\n\r\n    id = requestAnimationFrame(animate);\r\n  }\r\n\r\n  initPoints();\r\n  animate();\r\n\r\n  function moveE(e) {\r\n    p.x = e.movementX / 50;\r\n    p.y = e.movementY / 50;\r\n  }\r\n  dom.addEventListener(\"mousemove\", moveE);\r\n\r\n  function leaveE(e) {\r\n    [p.x, p.y] = [0, 0];\r\n  }\r\n  dom.addEventListener(\"mouseleave\", leaveE);\r\n\r\n  function resizeE() {\r\n    canvas.height = parseInt(getComputedStyle(dom)[\"height\"]) * 1.2;\r\n    canvas.width = parseInt(getComputedStyle(dom)[\"width\"]) * 1.2;\r\n    canvas.style.top =\r\n      \"-\" + parseInt(getComputedStyle(dom)[\"height\"]) * 0.1 + \"px\";\r\n    canvas.style.left =\r\n      \"-\" + parseInt(getComputedStyle(dom)[\"width\"]) * 0.1 + \"px\";\r\n    initPoints();\r\n  }\r\n  window.addEventListener(\"resize\", resizeE);\r\n\r\n  function clickE() {\r\n    let target = copy(colors[++ci % colors.length]);\r\n    move(color, target, duration);\r\n  }\r\n  dom.addEventListener(\"click\", clickE);\r\n\r\n  return {\r\n    canvas,\r\n    stop() {\r\n      cancelAnimationFrame(id);\r\n      dom.removeEventListener(\"mousemove\", moveE);\r\n      dom.removeEventListener(\"mouseleave\", leaveE);\r\n      window.removeEventListener(\"resize\", resizeE);\r\n      dom.removeEventListener(\"click\", clickE);\r\n    }\r\n  };\r\n};\r\n\r\nexport { wave };\r\n","import { noise } from \"./perlin\";\r\nimport { move, copy } from \"./utils\";\r\n\r\nconst wind = function({\r\n  dom, // 挂载在哪个dom上\r\n  span = 50, // 单个元素的大小\r\n  scale = 200, // 与噪声晶格的映射比，值越大动画越混沌无序\r\n  speed = 0.0001, // 单个元素旋转速度\r\n  duration = 1000, // 颜色改变时间\r\n  colors = [\r\n    {\r\n      r: 212,\r\n      g: 192,\r\n      b: 255\r\n    },\r\n    {\r\n      r: 192,\r\n      g: 255,\r\n      b: 244\r\n    },\r\n    {\r\n      r: 255,\r\n      g: 192,\r\n      b: 203\r\n    }\r\n  ] // 颜色组，点击dom时颜色将在这个数组间切换\r\n}) {\r\n  dom.style.position = \"relative\";\r\n  dom.style.zIndex = 0;\r\n  dom.style.overflow = \"hidden\";\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  canvas.style.position = \"absolute\";\r\n  canvas.style.zIndex = \"-999\";\r\n  canvas.style.top =\r\n    \"-\" + parseInt(getComputedStyle(dom)[\"height\"]) * 0.1 + \"px\";\r\n  canvas.style.left =\r\n    \"-\" + parseInt(getComputedStyle(dom)[\"width\"]) * 0.1 + \"px\";\r\n  canvas.height = parseInt(getComputedStyle(dom)[\"height\"]) * 1.2;\r\n  canvas.width = parseInt(getComputedStyle(dom)[\"width\"]) * 1.2;\r\n\r\n  dom.appendChild(canvas);\r\n\r\n  let r = span / 2;\r\n  let seed = 0;\r\n  let ci = 0;\r\n  const color = copy(colors[ci]);\r\n\r\n  function Point({ cx, cy }) {\r\n    this.cx = cx;\r\n    this.cy = cy;\r\n  }\r\n\r\n  Point.prototype.line = function() {\r\n    context.beginPath();\r\n    let s = noise.simplex3(this.cx / scale, this.cy / scale, seed);\r\n    let sa = Math.abs(s);\r\n    context.strokeStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${sa})`;\r\n    context.lineWidth = Math.abs(s) * 8;\r\n    let a = Math.PI * 2 * s;\r\n    let ap = Math.PI + a;\r\n\r\n    context.moveTo(this.cx * Math.cos(a), this.cx * Math.sin(a));\r\n    context.lineTo(this.cx * Math.sin(ap), this.cy * Math.cos(ap));\r\n\r\n    context.stroke();\r\n  };\r\n\r\n  let points = [];\r\n  function initPoints() {\r\n    for (let y = 0; y < canvas.height; y += span) {\r\n      for (let x = 0; x < canvas.width; x += span) {\r\n        // 这里可能造成绘制的条形超过canvas边界，x < canvas.height即使在canvas的倒数第一行也成立，也会继续向下\r\n        points.push(\r\n          new Point({\r\n            cx: x + r,\r\n            cy: y + r\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const p = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  function draw() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.translate(p.x, p.y);\r\n    [p.x, p.y] = [0, 0];\r\n\r\n    for (let i of points) {\r\n      i.line();\r\n    }\r\n  }\r\n\r\n  let id;\r\n  function animate() {\r\n    draw();\r\n    seed += speed;\r\n\r\n    id = requestAnimationFrame(animate);\r\n  }\r\n\r\n  initPoints();\r\n  animate();\r\n\r\n  function moveE(e) {\r\n    p.x = e.movementX / 50;\r\n    p.y = e.movementY / 50;\r\n  }\r\n  dom.addEventListener(\"mousemove\", moveE);\r\n\r\n  function leaveE(e) {\r\n    [p.x, p.y] = [0, 0];\r\n  }\r\n  dom.addEventListener(\"mouseleave\", leaveE);\r\n\r\n  function resizeE() {\r\n    canvas.height = parseInt(getComputedStyle(dom)[\"height\"]) * 1.2;\r\n    canvas.width = parseInt(getComputedStyle(dom)[\"width\"]) * 1.2;\r\n    canvas.style.top =\r\n      \"-\" + parseInt(getComputedStyle(dom)[\"height\"]) * 0.1 + \"px\";\r\n    canvas.style.left =\r\n      \"-\" + parseInt(getComputedStyle(dom)[\"width\"]) * 0.1 + \"px\";\r\n    initPoints();\r\n  }\r\n  window.addEventListener(\"resize\", resizeE);\r\n\r\n  function clickE() {\r\n    let target = copy(colors[++ci % colors.length]);\r\n    move(color, target, duration);\r\n  }\r\n  dom.addEventListener(\"click\", clickE);\r\n\r\n  return {\r\n    canvas,\r\n    stop() {\r\n      cancelAnimationFrame(id);\r\n      dom.removeEventListener(\"mousemove\", moveE);\r\n      dom.removeEventListener(\"mouseleave\", leaveE);\r\n      window.removeEventListener(\"resize\", resizeE);\r\n      dom.removeEventListener(\"click\", clickE);\r\n    }\r\n  };\r\n};\r\n\r\nexport { wind };\r\n","import { noise } from \"./perlin\";\r\nimport { move, copy } from \"./utils\";\r\n\r\nconst rain = function({\r\n  dom, // 挂载在哪个dom上\r\n  span = 50, // 单个元素的大小\r\n  scale = 1000, // 与噪声晶格的映射比，值越大动画越混沌无序\r\n  speed = 0.002, // 单个元素旋转速度\r\n  duration = 1000, // 颜色改变时间\r\n  colors = [\r\n    {\r\n      r: 212,\r\n      g: 192,\r\n      b: 255\r\n    },\r\n    {\r\n      r: 192,\r\n      g: 255,\r\n      b: 244\r\n    },\r\n    {\r\n      r: 255,\r\n      g: 192,\r\n      b: 203\r\n    }\r\n  ] // 颜色组，点击dom时颜色将在这个数组间切换\r\n}) {\r\n  dom.style.position = \"relative\";\r\n  dom.style.zIndex = 0;\r\n  dom.style.overflow = \"hidden\";\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  canvas.style.position = \"absolute\";\r\n  canvas.style.zIndex = \"-999\";\r\n  canvas.style.top =\r\n    \"-\" + parseInt(getComputedStyle(dom)[\"height\"]) * 0.1 + \"px\";\r\n  canvas.style.left =\r\n    \"-\" + parseInt(getComputedStyle(dom)[\"width\"]) * 0.1 + \"px\";\r\n  canvas.height = parseInt(getComputedStyle(dom)[\"height\"]) * 1.2;\r\n  canvas.width = parseInt(getComputedStyle(dom)[\"width\"]) * 1.2;\r\n\r\n  dom.appendChild(canvas);\r\n\r\n  let r = span / 2;\r\n  let seed = 0;\r\n  let ci = 0;\r\n  const color = copy(colors[ci]);\r\n\r\n  function Point({ cx, cy }) {\r\n    this.cx = cx;\r\n    this.cy = cy;\r\n  }\r\n\r\n  Point.prototype.line = function() {\r\n    context.beginPath();\r\n    let s = noise.simplex3(this.cx / scale, this.cy / scale, seed);\r\n    let sa = Math.abs(s);\r\n    context.strokeStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${sa})`;\r\n    context.lineWidth = Math.abs(s) * 8;\r\n    let a = Math.PI * 2 * s;\r\n    let ap = Math.PI + a;\r\n\r\n    context.moveTo(this.cx + Math.sin(a) * r, this.cy + Math.cos(a) * r);\r\n    context.lineTo(this.cx + Math.cos(ap) * r, this.cy + Math.sin(ap) * r);\r\n\r\n    context.stroke();\r\n  };\r\n\r\n  let points = [];\r\n  function initPoints() {\r\n    for (let y = 0; y < canvas.height; y += span) {\r\n      for (let x = 0; x < canvas.width; x += span) {\r\n        // 这里可能造成绘制的条形超过canvas边界，x < canvas.height即使在canvas的倒数第一行也成立，也会继续向下\r\n        points.push(\r\n          new Point({\r\n            cx: x + r,\r\n            cy: y + r\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const p = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  function draw() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.translate(p.x, p.y);\r\n    [p.x, p.y] = [0, 0];\r\n\r\n    for (let i of points) {\r\n      i.line();\r\n    }\r\n  }\r\n\r\n  let id;\r\n  function animate() {\r\n    draw();\r\n    seed += speed;\r\n\r\n    id = requestAnimationFrame(animate);\r\n  }\r\n\r\n  initPoints();\r\n  animate();\r\n\r\n  function moveE(e) {\r\n    p.x = e.movementX / 50;\r\n    p.y = e.movementY / 50;\r\n  }\r\n  dom.addEventListener(\"mousemove\", moveE);\r\n\r\n  function leaveE(e) {\r\n    [p.x, p.y] = [0, 0];\r\n  }\r\n  dom.addEventListener(\"mouseleave\", leaveE);\r\n\r\n  function resizeE() {\r\n    canvas.height = parseInt(getComputedStyle(dom)[\"height\"]) * 1.2;\r\n    canvas.width = parseInt(getComputedStyle(dom)[\"width\"]) * 1.2;\r\n    canvas.style.top =\r\n      \"-\" + parseInt(getComputedStyle(dom)[\"height\"]) * 0.1 + \"px\";\r\n    canvas.style.left =\r\n      \"-\" + parseInt(getComputedStyle(dom)[\"width\"]) * 0.1 + \"px\";\r\n    initPoints();\r\n  }\r\n  window.addEventListener(\"resize\", resizeE);\r\n\r\n  function clickE() {\r\n    let target = copy(colors[++ci % colors.length]);\r\n    move(color, target, duration);\r\n  }\r\n  dom.addEventListener(\"click\", clickE);\r\n\r\n  return {\r\n    canvas,\r\n    stop() {\r\n      cancelAnimationFrame(id);\r\n      dom.removeEventListener(\"mousemove\", moveE);\r\n      dom.removeEventListener(\"mouseleave\", leaveE);\r\n      window.removeEventListener(\"resize\", resizeE);\r\n      dom.removeEventListener(\"click\", clickE);\r\n    }\r\n  };\r\n};\r\n\r\nexport { rain };\r\n","import { wave } from \"./wave\";\r\nimport { wind } from \"./wind\";\r\nimport { rain } from \"./rain\";\r\n\r\nexport { wave, rain, wind };\r\n"]}