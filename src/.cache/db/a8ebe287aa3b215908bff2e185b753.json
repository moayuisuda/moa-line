{"id":"test.html","dependencies":[{"name":"./perlin.js","dynamic":true,"resolved":"C:\\Users\\Administrator\\Desktop\\gitBox\\moaline\\src\\perlin.js","parent":"C:\\Users\\Administrator\\Desktop\\gitBox\\moaline\\src\\test.html"},{"name":"_css_loader","parent":"C:\\Users\\Administrator\\Desktop\\gitBox\\moaline\\src\\test.html","resolved":"C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\Administrator\\Desktop\\gitBox\\moaline\\package.json","includedInParent":true,"mtime":1578384918532}],"generated":{"html":"<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <style>body {\r\n        margin: 0;\r\n      }\r\n\r\n      .main {\r\n        background: #000;\r\n        height: 100vh;\r\n      }</style>\r\n  </head>\r\n\r\n  <body>\r\n    <div class=\"main\"></div>\r\n  </body>\r\n  <script src=\"/75e4523b9658649a510af1fa69051c53.js\"></script>\r\n  <script>var wave = function wave(_ref) {\n  var dom = _ref.dom,\n      _ref$span = _ref.span,\n      span = _ref$span === void 0 ? 50 : _ref$span,\n      _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 1000 : _ref$scale,\n      _ref$speed = _ref.speed,\n      speed = _ref$speed === void 0 ? 0.01 : _ref$speed,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? -999 : _ref$zIndex,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [{\n    r: 212,\n    g: 192,\n    b: 255\n  }, {\n    r: 192,\n    g: 255,\n    b: 244\n  }, {\n    r: 255,\n    g: 192,\n    b: 203\n  }] : _ref$colors;\n  dom.style.position = \"relative\";\n  dom.style.zIndex = 0;\n  dom.style.overflow = \"hidden\";\n  var canvas = document.createElement(\"canvas\");\n  var context = canvas.getContext(\"2d\");\n  canvas.style.position = \"absolute\";\n  canvas.style.zIndex = zIndex;\n  canvas.height = parseInt(getComputedStyle(dom)[\"height\"]);\n  canvas.width = parseInt(getComputedStyle(dom)[\"width\"]);\n  dom.appendChild(canvas);\n  var r = span / 2;\n\n  function Point(_ref2) {\n    var cx = _ref2.cx,\n        cy = _ref2.cy;\n    this.cx = cx;\n    this.cy = cy;\n  }\n\n  Point.prototype.draw = function () {\n    context.beginPath();\n    var s = noise.simplex3(this.cx / scale, this.cy / scale, time);\n    var sa = Math.abs(s);\n    context.strokeStyle = \"rgba(255, 255, 255, \".concat(sa, \")\");\n    context.lineWidth = Math.abs(s) * 8;\n    var a = Math.PI * 2 * s;\n    var ap = Math.PI + a;\n    context.moveTo(this.cx, this.cx);\n    context.lineTo(this.cx + Math.cos(ap) * r, this.cy + Math.sin(ap) * r);\n    context.stroke();\n  };\n\n  var points = [];\n\n  function initPoints() {\n    for (var y = 0; y < canvas.height; y += span) {\n      for (var x = 0; x < canvas.width; x += span) {\n        points.push(new Point({\n          cx: x + r,\n          cy: y + r\n        }));\n      }\n    }\n  }\n\n  function draw() {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var _i = 0; _i < points.length; _i++) {\n      var i = points[_i];\n      i.draw();\n    }\n  }\n\n  var id;\n  var time = 0;\n\n  function animate() {\n    draw();\n    time += speed;\n    id = requestAnimationFrame(animate);\n  }\n\n  initPoints();\n  animate();\n  return {\n    canvas: canvas,\n    stop: function stop() {\n      cancelAnimationFrame(id);\n    }\n  };\n};\n\nwave({\n  dom: document.querySelector(\".main\"),\n  scale: 5000,\n  speed: 0.002,\n  span: 100\n});</script>\r\n</html>\r\n"},"hash":"786b93b6c4ce0fced7584d33ab70d0f7","cacheData":{"env":{}}}